<?xml version="1.0" encoding="UTF-8"?>
<!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.4-b01-. -->
<!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.4-b01-. -->
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://launch.v81.api.keysurvey.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://launch.v81.api.keysurvey.com" name="LaunchManagement">
<types>
<xsd:schema>
<xsd:import namespace="http://v81.api.keysurvey.com" schemaLocation="http://app.form.com:80/Member/api/v81/launch/LaunchManagementService?xsd=1"/>
</xsd:schema>
<xsd:schema>
<xsd:import namespace="http://launch.v81.api.keysurvey.com" schemaLocation="http://app.form.com:80/Member/api/v81/launch/LaunchManagementService?xsd=2"/>
</xsd:schema>
</types>
<message name="getVotingLink">
<part name="parameters" element="tns:getVotingLink"/>
</message>
<message name="getVotingLinkResponse">
<part name="parameters" element="tns:getVotingLinkResponse"/>
</message>
<message name="WSIllegalArgumentException">
<part xmlns:ns1="http://v81.api.keysurvey.com" name="fault" element="ns1:WSIllegalArgumentException"/>
</message>
<message name="isFormPublishedToPortal">
<part name="parameters" element="tns:isFormPublishedToPortal"/>
</message>
<message name="isFormPublishedToPortalResponse">
<part name="parameters" element="tns:isFormPublishedToPortalResponse"/>
</message>
<message name="getFormVisibilityOnPortal">
<part name="parameters" element="tns:getFormVisibilityOnPortal"/>
</message>
<message name="getFormVisibilityOnPortalResponse">
<part name="parameters" element="tns:getFormVisibilityOnPortalResponse"/>
</message>
<message name="setFormVisibilityOnPortal">
<part name="parameters" element="tns:setFormVisibilityOnPortal"/>
</message>
<message name="setFormVisibilityOnPortalResponse">
<part name="parameters" element="tns:setFormVisibilityOnPortalResponse"/>
</message>
<message name="getPortalResponseSettings">
<part name="parameters" element="tns:getPortalResponseSettings"/>
</message>
<message name="getPortalResponseSettingsResponse">
<part name="parameters" element="tns:getPortalResponseSettingsResponse"/>
</message>
<message name="setPortalResponseSettings">
<part name="parameters" element="tns:setPortalResponseSettings"/>
</message>
<message name="setPortalResponseSettingsResponse">
<part name="parameters" element="tns:setPortalResponseSettingsResponse"/>
</message>
<message name="lockAccessToContact">
<part name="parameters" element="tns:lockAccessToContact"/>
</message>
<message name="lockAccessToContactResponse">
<part name="parameters" element="tns:lockAccessToContactResponse"/>
</message>
<message name="getUniqueUrls">
<part name="parameters" element="tns:getUniqueUrls"/>
</message>
<message name="getUniqueUrlsResponse">
<part name="parameters" element="tns:getUniqueUrlsResponse"/>
</message>
<message name="WSSecurityException">
<part xmlns:ns2="http://v81.api.keysurvey.com" name="fault" element="ns2:WSSecurityException"/>
</message>
<message name="WSObjectNotFoundException">
<part xmlns:ns3="http://v81.api.keysurvey.com" name="fault" element="ns3:WSObjectNotFoundException"/>
</message>
<message name="WSInternalServerException">
<part xmlns:ns4="http://v81.api.keysurvey.com" name="fault" element="ns4:WSInternalServerException"/>
</message>
<message name="getUniqueUrlSendingStatus">
<part name="parameters" element="tns:getUniqueUrlSendingStatus"/>
</message>
<message name="getUniqueUrlSendingStatusResponse">
<part name="parameters" element="tns:getUniqueUrlSendingStatusResponse"/>
</message>
<message name="sendUniqueUrlWithAutofillByEmail">
<part name="parameters" element="tns:sendUniqueUrlWithAutofillByEmail"/>
</message>
<message name="sendUniqueUrlWithAutofillByEmailResponse">
<part name="parameters" element="tns:sendUniqueUrlWithAutofillByEmailResponse"/>
</message>
<message name="getIncompleteEmails">
<part name="parameters" element="tns:getIncompleteEmails"/>
</message>
<message name="getIncompleteEmailsResponse">
<part name="parameters" element="tns:getIncompleteEmailsResponse"/>
</message>
<message name="getDefaultUrlType">
<part name="parameters" element="tns:getDefaultUrlType"/>
</message>
<message name="getDefaultUrlTypeResponse">
<part name="parameters" element="tns:getDefaultUrlTypeResponse"/>
</message>
<message name="setDefaultUrlType">
<part name="parameters" element="tns:setDefaultUrlType"/>
</message>
<message name="setDefaultUrlTypeResponse">
<part name="parameters" element="tns:setDefaultUrlTypeResponse"/>
</message>
<message name="sendUniqueUrlByEmail">
<part name="parameters" element="tns:sendUniqueUrlByEmail"/>
</message>
<message name="sendUniqueUrlByEmailResponse">
<part name="parameters" element="tns:sendUniqueUrlByEmailResponse"/>
</message>
<message name="getFormEmailTemplate">
<part name="parameters" element="tns:getFormEmailTemplate"/>
</message>
<message name="getFormEmailTemplateResponse">
<part name="parameters" element="tns:getFormEmailTemplateResponse"/>
</message>
<message name="setFormEmailTemplate">
<part name="parameters" element="tns:setFormEmailTemplate"/>
</message>
<message name="setFormEmailTemplateResponse">
<part name="parameters" element="tns:setFormEmailTemplateResponse"/>
</message>
<message name="getAutofillData">
<part name="parameters" element="tns:getAutofillData"/>
</message>
<message name="getAutofillDataResponse">
<part name="parameters" element="tns:getAutofillDataResponse"/>
</message>
<message name="getFormTag">
<part name="parameters" element="tns:getFormTag"/>
</message>
<message name="getFormTagResponse">
<part name="parameters" element="tns:getFormTagResponse"/>
</message>
<message name="setFormTag">
<part name="parameters" element="tns:setFormTag"/>
</message>
<message name="setFormTagResponse">
<part name="parameters" element="tns:setFormTagResponse"/>
</message>
<message name="deleteEmailReminder">
<part name="parameters" element="tns:deleteEmailReminder"/>
</message>
<message name="deleteEmailReminderResponse">
<part name="parameters" element="tns:deleteEmailReminderResponse"/>
</message>
<message name="getEmailReminder">
<part name="parameters" element="tns:getEmailReminder"/>
</message>
<message name="getEmailReminderResponse">
<part name="parameters" element="tns:getEmailReminderResponse"/>
</message>
<message name="updateEmailReminder">
<part name="parameters" element="tns:updateEmailReminder"/>
</message>
<message name="updateEmailReminderResponse">
<part name="parameters" element="tns:updateEmailReminderResponse"/>
</message>
<message name="createEmailReminder">
<part name="parameters" element="tns:createEmailReminder"/>
</message>
<message name="createEmailReminderResponse">
<part name="parameters" element="tns:createEmailReminderResponse"/>
</message>
<message name="getUniqueUrl">
<part name="parameters" element="tns:getUniqueUrl"/>
</message>
<message name="getUniqueUrlResponse">
<part name="parameters" element="tns:getUniqueUrlResponse"/>
</message>
<message name="getEmailReminders">
<part name="parameters" element="tns:getEmailReminders"/>
</message>
<message name="getEmailRemindersResponse">
<part name="parameters" element="tns:getEmailRemindersResponse"/>
</message>
<message name="getMasterUrl">
<part name="parameters" element="tns:getMasterUrl"/>
</message>
<message name="getMasterUrlResponse">
<part name="parameters" element="tns:getMasterUrlResponse"/>
</message>
<message name="getDataFlowSettings">
<part name="parameters" element="tns:getDataFlowSettings"/>
</message>
<message name="getDataFlowSettingsResponse">
<part name="parameters" element="tns:getDataFlowSettingsResponse"/>
</message>
<message name="sendUniqueURLsToCMList">
<part name="parameters" element="tns:sendUniqueURLsToCMList"/>
</message>
<message name="sendUniqueURLsToCMListResponse">
<part name="parameters" element="tns:sendUniqueURLsToCMListResponse"/>
</message>
<message name="sendUniqueURLsToCMListForNewFilter">
<part name="parameters" element="tns:sendUniqueURLsToCMListForNewFilter"/>
</message>
<message name="sendUniqueURLsToCMListForNewFilterResponse">
<part name="parameters" element="tns:sendUniqueURLsToCMListForNewFilterResponse"/>
</message>
<message name="publishOnParticipantPortal">
<part name="parameters" element="tns:publishOnParticipantPortal"/>
</message>
<message name="publishOnParticipantPortalResponse">
<part name="parameters" element="tns:publishOnParticipantPortalResponse"/>
</message>
<message name="passwordProtectWithAutofill">
<part name="parameters" element="tns:passwordProtectWithAutofill"/>
</message>
<message name="passwordProtectWithAutofillResponse">
<part name="parameters" element="tns:passwordProtectWithAutofillResponse"/>
</message>
<message name="getUniqueUrlWithAutofillByEmail">
<part name="parameters" element="tns:getUniqueUrlWithAutofillByEmail"/>
</message>
<message name="getUniqueUrlWithAutofillByEmailResponse">
<part name="parameters" element="tns:getUniqueUrlWithAutofillByEmailResponse"/>
</message>
<message name="setDataFlowSettings">
<part name="parameters" element="tns:setDataFlowSettings"/>
</message>
<message name="setDataFlowSettingsResponse">
<part name="parameters" element="tns:setDataFlowSettingsResponse"/>
</message>
<message name="getUniqueUrlByEmail">
<part name="parameters" element="tns:getUniqueUrlByEmail"/>
</message>
<message name="getUniqueUrlByEmailResponse">
<part name="parameters" element="tns:getUniqueUrlByEmailResponse"/>
</message>
<message name="passwordProtectionThroughContactManagerForNewFilter">
<part name="parameters" element="tns:passwordProtectionThroughContactManagerForNewFilter"/>
</message>
<message name="passwordProtectionThroughContactManagerForNewFilterResponse">
<part name="parameters" element="tns:passwordProtectionThroughContactManagerForNewFilterResponse"/>
</message>
<message name="passwordProtectionThroughContactManager">
<part name="parameters" element="tns:passwordProtectionThroughContactManager"/>
</message>
<message name="passwordProtectionThroughContactManagerResponse">
<part name="parameters" element="tns:passwordProtectionThroughContactManagerResponse"/>
</message>
<message name="publishOnParticipantPortalWithNewFilter">
<part name="parameters" element="tns:publishOnParticipantPortalWithNewFilter"/>
</message>
<message name="publishOnParticipantPortalWithNewFilterResponse">
<part name="parameters" element="tns:publishOnParticipantPortalWithNewFilterResponse"/>
</message>
<portType name="LaunchManagementService">
<operation name="getVotingLink">
<input message="tns:getVotingLink"/>
<output message="tns:getVotingLinkResponse"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
</operation>
<operation name="isFormPublishedToPortal">
<input message="tns:isFormPublishedToPortal"/>
<output message="tns:isFormPublishedToPortalResponse"/>
</operation>
<operation name="getFormVisibilityOnPortal">
<input message="tns:getFormVisibilityOnPortal"/>
<output message="tns:getFormVisibilityOnPortalResponse"/>
</operation>
<operation name="setFormVisibilityOnPortal">
<input message="tns:setFormVisibilityOnPortal"/>
<output message="tns:setFormVisibilityOnPortalResponse"/>
</operation>
<operation name="getPortalResponseSettings">
<input message="tns:getPortalResponseSettings"/>
<output message="tns:getPortalResponseSettingsResponse"/>
</operation>
<operation name="setPortalResponseSettings">
<input message="tns:setPortalResponseSettings"/>
<output message="tns:setPortalResponseSettingsResponse"/>
</operation>
<operation name="lockAccessToContact">
<input message="tns:lockAccessToContact"/>
<output message="tns:lockAccessToContactResponse"/>
</operation>
<operation name="getUniqueUrls">
<input message="tns:getUniqueUrls"/>
<output message="tns:getUniqueUrlsResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getUniqueUrlSendingStatus">
<input message="tns:getUniqueUrlSendingStatus"/>
<output message="tns:getUniqueUrlSendingStatusResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="sendUniqueUrlWithAutofillByEmail">
<input message="tns:sendUniqueUrlWithAutofillByEmail"/>
<output message="tns:sendUniqueUrlWithAutofillByEmailResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="getIncompleteEmails">
<input message="tns:getIncompleteEmails"/>
<output message="tns:getIncompleteEmailsResponse"/>
</operation>
<operation name="getDefaultUrlType">
<input message="tns:getDefaultUrlType"/>
<output message="tns:getDefaultUrlTypeResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="setDefaultUrlType">
<input message="tns:setDefaultUrlType"/>
<output message="tns:setDefaultUrlTypeResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="sendUniqueUrlByEmail">
<input message="tns:sendUniqueUrlByEmail"/>
<output message="tns:sendUniqueUrlByEmailResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="getFormEmailTemplate">
<input message="tns:getFormEmailTemplate"/>
<output message="tns:getFormEmailTemplateResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="setFormEmailTemplate">
<input message="tns:setFormEmailTemplate"/>
<output message="tns:setFormEmailTemplateResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getAutofillData">
<input message="tns:getAutofillData"/>
<output message="tns:getAutofillDataResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getFormTag">
<input message="tns:getFormTag"/>
<output message="tns:getFormTagResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="setFormTag">
<input message="tns:setFormTag"/>
<output message="tns:setFormTagResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="deleteEmailReminder">
<input message="tns:deleteEmailReminder"/>
<output message="tns:deleteEmailReminderResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getEmailReminder">
<input message="tns:getEmailReminder"/>
<output message="tns:getEmailReminderResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="updateEmailReminder">
<input message="tns:updateEmailReminder"/>
<output message="tns:updateEmailReminderResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="createEmailReminder">
<input message="tns:createEmailReminder"/>
<output message="tns:createEmailReminderResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getUniqueUrl">
<input message="tns:getUniqueUrl"/>
<output message="tns:getUniqueUrlResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getEmailReminders">
<input message="tns:getEmailReminders"/>
<output message="tns:getEmailRemindersResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getMasterUrl">
<input message="tns:getMasterUrl"/>
<output message="tns:getMasterUrlResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getDataFlowSettings">
<input message="tns:getDataFlowSettings"/>
<output message="tns:getDataFlowSettingsResponse"/>
</operation>
<operation name="sendUniqueURLsToCMList">
<input message="tns:sendUniqueURLsToCMList"/>
<output message="tns:sendUniqueURLsToCMListResponse"/>
</operation>
<operation name="sendUniqueURLsToCMListForNewFilter">
<input message="tns:sendUniqueURLsToCMListForNewFilter"/>
<output message="tns:sendUniqueURLsToCMListForNewFilterResponse"/>
</operation>
<operation name="publishOnParticipantPortal">
<input message="tns:publishOnParticipantPortal"/>
<output message="tns:publishOnParticipantPortalResponse"/>
</operation>
<operation name="passwordProtectWithAutofill">
<input message="tns:passwordProtectWithAutofill"/>
<output message="tns:passwordProtectWithAutofillResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="getUniqueUrlWithAutofillByEmail">
<input message="tns:getUniqueUrlWithAutofillByEmail"/>
<output message="tns:getUniqueUrlWithAutofillByEmailResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="setDataFlowSettings">
<input message="tns:setDataFlowSettings"/>
<output message="tns:setDataFlowSettingsResponse"/>
</operation>
<operation name="getUniqueUrlByEmail">
<input message="tns:getUniqueUrlByEmail"/>
<output message="tns:getUniqueUrlByEmailResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="passwordProtectionThroughContactManagerForNewFilter">
<input message="tns:passwordProtectionThroughContactManagerForNewFilter"/>
<output message="tns:passwordProtectionThroughContactManagerForNewFilterResponse"/>
</operation>
<operation name="passwordProtectionThroughContactManager">
<input message="tns:passwordProtectionThroughContactManager"/>
<output message="tns:passwordProtectionThroughContactManagerResponse"/>
</operation>
<operation name="publishOnParticipantPortalWithNewFilter">
<input message="tns:publishOnParticipantPortalWithNewFilter"/>
<output message="tns:publishOnParticipantPortalWithNewFilterResponse"/>
</operation>
</portType>
<binding name="LaunchManagementServicePortBinding" type="tns:LaunchManagementService">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="getVotingLink">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
</operation>
<operation name="isFormPublishedToPortal">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getFormVisibilityOnPortal">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="setFormVisibilityOnPortal">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getPortalResponseSettings">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="setPortalResponseSettings">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="lockAccessToContact">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getUniqueUrls">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getUniqueUrlSendingStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="sendUniqueUrlWithAutofillByEmail">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="getIncompleteEmails">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getDefaultUrlType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="setDefaultUrlType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="sendUniqueUrlByEmail">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="getFormEmailTemplate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="setFormEmailTemplate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getAutofillData">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getFormTag">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="setFormTag">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="deleteEmailReminder">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getEmailReminder">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="updateEmailReminder">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="createEmailReminder">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getUniqueUrl">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getEmailReminders">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getMasterUrl">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getDataFlowSettings">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="sendUniqueURLsToCMList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="sendUniqueURLsToCMListForNewFilter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="publishOnParticipantPortal">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="passwordProtectWithAutofill">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="getUniqueUrlWithAutofillByEmail">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="setDataFlowSettings">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getUniqueUrlByEmail">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="passwordProtectionThroughContactManagerForNewFilter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="passwordProtectionThroughContactManager">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="publishOnParticipantPortalWithNewFilter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
</binding>
<service name="LaunchManagement">
<port name="LaunchManagementServicePort" binding="tns:LaunchManagementServicePortBinding">
<soap:address location="http://app.form.com:80/Member/api/v81/launch/LaunchManagementService"/>
</port>
</service>
</definitions>